<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.1.1 r1855137">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="SO_SBAPools_CouponDetails_SoapUI" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">0</stringProp>
        <stringProp name="ThreadGroup.start_time"></stringProp>
        <stringProp name="ThreadGroup.end_time"></stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">0</stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="UserName" elementType="Argument">
              <stringProp name="Argument.name">UserName</stringProp>
              <stringProp name="Argument.value">FDSQAN_C</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="SerialNumber" elementType="Argument">
              <stringProp name="Argument.name">SerialNumber</stringProp>
              <stringProp name="Argument.value">415271</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="Environment" elementType="Argument">
              <stringProp name="Argument.name">Environment</stringProp>
              <stringProp name="Argument.value">${__P(Stage,QA)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="Base" elementType="Argument">
              <stringProp name="Argument.name">Base</stringProp>
              <stringProp name="Argument.value">${__BeanShell(import org.apache.jmeter.services.FileServer; FileServer.getFileServer().getBaseDir().split(&quot;Specs&quot;)[0]+&quot;Config/&quot;;)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="Token" elementType="Argument">
              <stringProp name="Argument.name">Token</stringProp>
              <stringProp name="Argument.value">${__P(Token,1)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="filename">${Base}${Environment}.csv</stringProp>
          <boolProp name="ignoreFirstLine">false</boolProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="variableNames">URL</stringProp>
        </CSVDataSet>
        <hashTree/>
        <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="Cache" enabled="true">
          <boolProp name="clearEachIteration">true</boolProp>
          <boolProp name="useExpires">true</boolProp>
        </CacheManager>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="Cookies" enabled="true">
          <collectionProp name="CookieManager.cookies"/>
          <boolProp name="CookieManager.clearEachIteration">true</boolProp>
        </CookieManager>
        <hashTree/>
        <DNSCacheManager guiclass="DNSCachePanel" testclass="DNSCacheManager" testname="DNS Cache Manager" enabled="true">
          <collectionProp name="DNSCacheManager.servers"/>
          <boolProp name="DNSCacheManager.clearEachIteration">false</boolProp>
          <boolProp name="DNSCacheManager.isCustomResolver">false</boolProp>
        </DNSCacheManager>
        <hashTree/>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="Defaults" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="user_defined" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <boolProp name="HTTPSampler.image_parser">true</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">4</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
          <stringProp name="IfController.condition">${Token} == 1</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
        </IfController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Lima_Session_ID" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="username" elementType="HTTPArgument">
                  <stringProp name="Argument.name">username</stringProp>
                  <stringProp name="Argument.value">${UserName}</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="serial" elementType="HTTPArgument">
                  <stringProp name="Argument.name">serial</stringProp>
                  <stringProp name="Argument.value">${SerialNumber}</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">lima-staging.factset.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api-lima/credentials</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout">0</stringProp>
            <stringProp name="HTTPSampler.response_timeout">0</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Timeout Check" enabled="true">
              <stringProp name="DurationAssertion.duration">0</stringProp>
            </DurationAssertion>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Token" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">Token</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;token&quot;:&quot;(.+?)&quot;}</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">False</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Verify Header parameters of 83164K6A" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="0_service" elementType="HTTPArgument">
                <stringProp name="Argument.name">0_service</stringProp>
                <stringProp name="Argument.value">service_id=multi_type_header&amp;curn_iso=LOCAL&amp;request_info=db_names&amp;supported_types%5B%5D=DEALS&amp;supported_types%5B%5D=BONDS_MUNI&amp;supported_types%5B%5D=BONDS&amp;supported_types%5B%5D=PIPE&amp;supported_types%5B%5D=MORTGAGES&amp;supported_types%5B%5D=BANK_LOANS&amp;supported_types%5B%5D=FUTURES&amp;ticker=83164K6A&amp;report_name=Security+Overview&amp;report_uuid=${=import java.util.UUID; UUID.randomUUID()}&amp;request_language=EN-US&amp;validation_mode=IGNORE_ID_VALIDATION&amp;LOG_PERFORMANCE=false</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="mode" elementType="HTTPArgument">
                <stringProp name="Argument.name">mode</stringProp>
                <stringProp name="Argument.value">HTML_REPORT_FETCH</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="multi_fetch" elementType="HTTPArgument">
                <stringProp name="Argument.name">multi_fetch</stringProp>
                <stringProp name="Argument.value">true</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/services/HtmlReportData</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout">0</stringProp>
          <stringProp name="HTTPSampler.response_timeout">0</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Headers" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-Fds-Auth-Token</stringProp>
                <stringProp name="Header.value">${Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Timeout Check" enabled="true">
            <stringProp name="DurationAssertion.duration">0</stringProp>
          </DurationAssertion>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">System.out.println(vars.get(&quot;Token&quot;));</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Verify Coupon Details parameters of 83164K6A" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="0_service" elementType="HTTPArgument">
                <stringProp name="Argument.name">0_service</stringProp>
                <stringProp name="Argument.value">ticker=83164K6A&amp;report_name=Security+Overview&amp;report_uuid=${=import java.util.UUID; UUID.randomUUID()}&amp;request_language=EN-US&amp;validation_mode=IGNORE_ID_VALIDATION&amp;LOG_PERFORMANCE=false&amp;formula=IMC_DCS_SEC_OV_RPT_FIVE(curn_iso%3D%22LOCAL%22%2Csplit_adjust%3D%220%22)%3B&amp;service_id=generic_component</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="1_service" elementType="HTTPArgument">
                <stringProp name="Argument.name">1_service</stringProp>
                <stringProp name="Argument.value">ticker=83164K6A&amp;report_name=Security+Overview&amp;report_uuid=${=import java.util.UUID; UUID.randomUUID()}&amp;request_language=EN-US&amp;validation_mode=IGNORE_ID_VALIDATION&amp;LOG_PERFORMANCE=false&amp;formula=IMC_DCS_SEC_OV_RPT_ELEVEN(curn_iso%3D%22LOCAL%22%2Csplit_adjust%3D%220%22)%3B&amp;service_id=generic_component</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="mode" elementType="HTTPArgument">
                <stringProp name="Argument.name">mode</stringProp>
                <stringProp name="Argument.value">HTML_REPORT_FETCH</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="multi_fetch" elementType="HTTPArgument">
                <stringProp name="Argument.name">multi_fetch</stringProp>
                <stringProp name="Argument.value">true</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/services/HtmlReportData</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout">0</stringProp>
          <stringProp name="HTTPSampler.response_timeout">0</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Headers" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-Fds-Auth-Token</stringProp>
                <stringProp name="Header.value">${Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Timeout Check" enabled="true">
            <stringProp name="DurationAssertion.duration">0</stringProp>
          </DurationAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Verify Security Information title for 83164K6A" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">mode=HTML_REPORT_FETCH&amp;multi_fetch=true&amp;0_service=ticker%3D83164K6A%26report_name%3DSecurity%2BOverview%26report_uuid%${=import java.util.UUID; UUID.randomUUID()}%26request_language%3DEN-US%26validation_mode%3DIGNORE_ID_VALIDATION%26LOG_PERFORMANCE%3Dfalse%26formula%3DIMC_DCS_SEC_OV_RPT_ONE(is_web%253D0)%253B%26service_id%3Dgeneric_component&amp;1_service=ticker%3D83164K6A%26report_name%3DSecurity%2BOverview%26report_uuid%${=import java.util.UUID; UUID.randomUUID()}%26request_language%3DEN-US%26validation_mode%3DIGNORE_ID_VALIDATION%26LOG_PERFORMANCE%3Dfalse%26formula%3DIMC_DCS_SEC_OV_RPT_TWO(is_web%253D0)%253B%26service_id%3Dgeneric_component&amp;2_service=service_id%3Draw_fql%26ticker%3D83164K6A%26report_name%3DSecurity%2BOverview%26report_uuid%${=import java.util.UUID; UUID.randomUUID()}%26request_language%3DEN-US%26validation_mode%3DIGNORE_ID_VALIDATION%26LOG_PERFORMANCE%3Dfalse%26formula%3DIMC_DCS_SEC_OV_RPT_RATING(inst%253D%2522SP%2522%252Ccomponent%253D%25220%2522)%253B&amp;3_service=service_id%3Draw_fql%26ticker%3D83164K6A%26report_name%3DSecurity%2BOverview%26report_uuid%${=import java.util.UUID; UUID.randomUUID()}%26request_language%3DEN-US%26validation_mode%3DIGNORE_ID_VALIDATION%26LOG_PERFORMANCE%3Dfalse%26formula%3DIMC_DCS_SEC_OV_RPT_RATING(inst%253D%2522MOODYS%2522%252Ccomponent%253D%25220%2522)%253B&amp;4_service=service_id%3Draw_fql%26ticker%3D83164K6A%26report_name%3DSecurity%2BOverview%26report_uuid%${=import java.util.UUID; UUID.randomUUID()}%26request_language%3DEN-US%26validation_mode%3DIGNORE_ID_VALIDATION%26LOG_PERFORMANCE%3Dfalse%26formula%3DIMC_DCS_SEC_OV_RPT_RATING(inst%253D%2522FITCH%2522%252Ccomponent%253D%25220%2522)%253B&amp;5_service=ticker%3D83164K6A%26report_name%3DSecurity%2BOverview%26report_uuid%${=import java.util.UUID; UUID.randomUUID()}%26request_language%3DEN-US%26validation_mode%3DIGNORE_ID_VALIDATION%26LOG_PERFORMANCE%3Dfalse%26formula%3DIMC_DCS_SEC_OV_RPT_FOUR(curn_iso%253D%2522LOCAL%2522%252Csplit_adjust%253D%25220%2522)%253B%26service_id%3Dgeneric_component</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/services/HtmlReportData</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout">0</stringProp>
          <stringProp name="HTTPSampler.response_timeout">0</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Headers" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-Fds-Auth-Token</stringProp>
                <stringProp name="Header.value">${Token}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json </stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Timeout Check" enabled="true">
            <stringProp name="DurationAssertion.duration">0</stringProp>
          </DurationAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Verify Issuer &amp; Sector title for 83164K6A" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">mode=HTML_REPORT_FETCH&amp;multi_fetch=true&amp;0_service=ticker%3D83164K6A%26report_name%3DSecurity%2BOverview%26report_uuid%${=import java.util.UUID; UUID.randomUUID()}%26request_language%3DEN-US%26validation_mode%3DIGNORE_ID_VALIDATION%26LOG_PERFORMANCE%3Dfalse%26formula%3DIMC_DCS_SEC_OV_RPT_ONE(is_web%253D0)%253B%26service_id%3Dgeneric_component&amp;1_service=ticker%3D83164K6A%26report_name%3DSecurity%2BOverview%26report_uuid%${=import java.util.UUID; UUID.randomUUID()}%26request_language%3DEN-US%26validation_mode%3DIGNORE_ID_VALIDATION%26LOG_PERFORMANCE%3Dfalse%26formula%3DIMC_DCS_SEC_OV_RPT_TWO(is_web%253D0)%253B%26service_id%3Dgeneric_component&amp;2_service=service_id%3Draw_fql%26ticker%3D83164K6A%26report_name%3DSecurity%2BOverview%26report_uuid%${=import java.util.UUID; UUID.randomUUID()}%26request_language%3DEN-US%26validation_mode%3DIGNORE_ID_VALIDATION%26LOG_PERFORMANCE%3Dfalse%26formula%3DIMC_DCS_SEC_OV_RPT_RATING(inst%253D%2522SP%2522%252Ccomponent%253D%25220%2522)%253B&amp;3_service=service_id%3Draw_fql%26ticker%3D83164K6A%26report_name%3DSecurity%2BOverview%26report_uuid%${=import java.util.UUID; UUID.randomUUID()}%26request_language%3DEN-US%26validation_mode%3DIGNORE_ID_VALIDATION%26LOG_PERFORMANCE%3Dfalse%26formula%3DIMC_DCS_SEC_OV_RPT_RATING(inst%253D%2522MOODYS%2522%252Ccomponent%253D%25220%2522)%253B&amp;4_service=service_id%3Draw_fql%26ticker%3D83164K6A%26report_name%3DSecurity%2BOverview%26report_uuid%${=import java.util.UUID; UUID.randomUUID()}%26request_language%3DEN-US%26validation_mode%3DIGNORE_ID_VALIDATION%26LOG_PERFORMANCE%3Dfalse%26formula%3DIMC_DCS_SEC_OV_RPT_RATING(inst%253D%2522FITCH%2522%252Ccomponent%253D%25220%2522)%253B&amp;5_service=ticker%3D83164K6A%26report_name%3DSecurity%2BOverview%26report_uuid%${=import java.util.UUID; UUID.randomUUID()}%26request_language%3DEN-US%26validation_mode%3DIGNORE_ID_VALIDATION%26LOG_PERFORMANCE%3Dfalse%26formula%3DIMC_DCS_SEC_OV_RPT_FOUR(curn_iso%253D%2522LOCAL%2522%252Csplit_adjust%253D%25220%2522)%253B%26service_id%3Dgeneric_component</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/services/HtmlReportData</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout">0</stringProp>
          <stringProp name="HTTPSampler.response_timeout">0</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Headers" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-Fds-Auth-Token</stringProp>
                <stringProp name="Header.value">${Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Timeout Check" enabled="true">
            <stringProp name="DurationAssertion.duration">0</stringProp>
          </DurationAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Verify Security Details title for 83164K6A" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">mode=HTML_REPORT_FETCH&amp;multi_fetch=true&amp;0_service=ticker%3D83164K6A%26report_name%3DSecurity%2BOverview%26report_uuid%${=import java.util.UUID; UUID.randomUUID()}%26request_language%3DEN-US%26validation_mode%3DIGNORE_ID_VALIDATION%26LOG_PERFORMANCE%3Dfalse%26formula%3DIMC_DCS_SEC_OV_RPT_ONE(is_web%253D0)%253B%26service_id%3Dgeneric_component&amp;1_service=ticker%3D83164K6A%26report_name%3DSecurity%2BOverview%26report_uuid%${=import java.util.UUID; UUID.randomUUID()}%26request_language%3DEN-US%26validation_mode%3DIGNORE_ID_VALIDATION%26LOG_PERFORMANCE%3Dfalse%26formula%3DIMC_DCS_SEC_OV_RPT_TWO(is_web%253D0)%253B%26service_id%3Dgeneric_component&amp;2_service=service_id%3Draw_fql%26ticker%3D83164K6A%26report_name%3DSecurity%2BOverview%26report_uuid%${=import java.util.UUID; UUID.randomUUID()}%26request_language%3DEN-US%26validation_mode%3DIGNORE_ID_VALIDATION%26LOG_PERFORMANCE%3Dfalse%26formula%3DIMC_DCS_SEC_OV_RPT_RATING(inst%253D%2522SP%2522%252Ccomponent%253D%25220%2522)%253B&amp;3_service=service_id%3Draw_fql%26ticker%3D83164K6A%26report_name%3DSecurity%2BOverview%26report_uuid%${=import java.util.UUID; UUID.randomUUID()}%26request_language%3DEN-US%26validation_mode%3DIGNORE_ID_VALIDATION%26LOG_PERFORMANCE%3Dfalse%26formula%3DIMC_DCS_SEC_OV_RPT_RATING(inst%253D%2522MOODYS%2522%252Ccomponent%253D%25220%2522)%253B&amp;4_service=service_id%3Draw_fql%26ticker%3D83164K6A%26report_name%3DSecurity%2BOverview%26report_uuid%${=import java.util.UUID; UUID.randomUUID()}%26request_language%3DEN-US%26validation_mode%3DIGNORE_ID_VALIDATION%26LOG_PERFORMANCE%3Dfalse%26formula%3DIMC_DCS_SEC_OV_RPT_RATING(inst%253D%2522FITCH%2522%252Ccomponent%253D%25220%2522)%253B&amp;5_service=ticker%3D83164K6A%26report_name%3DSecurity%2BOverview%26report_uuid%${=import java.util.UUID; UUID.randomUUID()}%26request_language%3DEN-US%26validation_mode%3DIGNORE_ID_VALIDATION%26LOG_PERFORMANCE%3Dfalse%26formula%3DIMC_DCS_SEC_OV_RPT_FOUR(curn_iso%253D%2522LOCAL%2522%252Csplit_adjust%253D%25220%2522)%253B%26service_id%3Dgeneric_component</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/services/HtmlReportData</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout">0</stringProp>
          <stringProp name="HTTPSampler.response_timeout">0</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Headers" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-Fds-Auth-Token</stringProp>
                <stringProp name="Header.value">${Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Timeout Check" enabled="true">
            <stringProp name="DurationAssertion.duration">0</stringProp>
          </DurationAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Verify Issue Size title for 83164K6A" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="0_service" elementType="HTTPArgument">
                <stringProp name="Argument.name">0_service</stringProp>
                <stringProp name="Argument.value">ticker=83164K6A&amp;report_name=Security+Overview&amp;report_uuid=${=import java.util.UUID; UUID.randomUUID()}&amp;request_language=EN-US&amp;validation_mode=IGNORE_ID_VALIDATION&amp;LOG_PERFORMANCE=false&amp;formula=IMC_DCS_SEC_OV_RPT_SIX(curn_iso%3D%22LOCAL%22%2Csplit_adjust%3D%220%22)%3B&amp;service_id=generic_component</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="1_service" elementType="HTTPArgument">
                <stringProp name="Argument.name">1_service</stringProp>
                <stringProp name="Argument.value">ticker=83164K6A&amp;report_name=Security+Overview&amp;report_uuid=${=import java.util.UUID; UUID.randomUUID()}&amp;request_language=EN-US&amp;validation_mode=IGNORE_ID_VALIDATION&amp;LOG_PERFORMANCE=false&amp;formula=IMC_DCS_SEC_OV_RPT_NINE(curn_iso%3D%22LOCAL%22%2Csplit_adjust%3D%220%22)%3B&amp;service_id=generic_component</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="2_service" elementType="HTTPArgument">
                <stringProp name="Argument.name">2_service</stringProp>
                <stringProp name="Argument.value">ticker=83164K6A&amp;report_name=Security+Overview&amp;report_uuid=${=import java.util.UUID; UUID.randomUUID()}&amp;request_language=EN-US&amp;validation_mode=IGNORE_ID_VALIDATION&amp;LOG_PERFORMANCE=false&amp;formula=IMC_DCS_SEC_OV_RPT_TEN(curn_iso%3D%22LOCAL%22%2Csplit_adjust%3D%220%22)%3B&amp;service_id=generic_component</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="mode" elementType="HTTPArgument">
                <stringProp name="Argument.name">mode</stringProp>
                <stringProp name="Argument.value">HTML_REPORT_FETCH</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="multi_fetch" elementType="HTTPArgument">
                <stringProp name="Argument.name">multi_fetch</stringProp>
                <stringProp name="Argument.value">true</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/services/HtmlReportData</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout">0</stringProp>
          <stringProp name="HTTPSampler.response_timeout">0</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Headers" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-Fds-Auth-Token</stringProp>
                <stringProp name="Header.value">${Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Timeout Check" enabled="true">
            <stringProp name="DurationAssertion.duration">0</stringProp>
          </DurationAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Verify Collateral Information title for 83164K6A" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="0_service" elementType="HTTPArgument">
                <stringProp name="Argument.name">0_service</stringProp>
                <stringProp name="Argument.value">ticker=83164K6A&amp;report_name=Security+Overview&amp;report_uuid=${=import java.util.UUID; UUID.randomUUID()}&amp;request_language=EN-US&amp;validation_mode=IGNORE_ID_VALIDATION&amp;LOG_PERFORMANCE=false&amp;formula=IMC_DCS_SEC_OV_RPT_EIGHT(curn_iso%3D%22LOCAL%22%2Csplit_adjust%3D%220%22)%3B&amp;service_id=generic_component</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="1_service" elementType="HTTPArgument">
                <stringProp name="Argument.name">1_service</stringProp>
                <stringProp name="Argument.value">ticker=83164K6A&amp;report_name=Security+Overview&amp;report_uuid=${=import java.util.UUID; UUID.randomUUID()}&amp;request_language=EN-US&amp;validation_mode=IGNORE_ID_VALIDATION&amp;LOG_PERFORMANCE=false&amp;formula=IMC_DCS_SEC_OV_RPT_QUICK_LINKS()%3B&amp;service_id=generic_component</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="mode" elementType="HTTPArgument">
                <stringProp name="Argument.name">mode</stringProp>
                <stringProp name="Argument.value">HTML_REPORT_FETCH</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="multi_fetch" elementType="HTTPArgument">
                <stringProp name="Argument.name">multi_fetch</stringProp>
                <stringProp name="Argument.value">true</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/services/HtmlReportData</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout">0</stringProp>
          <stringProp name="HTTPSampler.response_timeout">0</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Headers" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-Fds-Auth-Token</stringProp>
                <stringProp name="Header.value">${Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Timeout Check" enabled="true">
            <stringProp name="DurationAssertion.duration">0</stringProp>
          </DurationAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Verify Secuirty Factor Infobox parameters for 83164K6A" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="LOG_PERFORMANCE" elementType="HTTPArgument">
                <stringProp name="Argument.name">LOG_PERFORMANCE</stringProp>
                <stringProp name="Argument.value">false</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="formula" elementType="HTTPArgument">
                <stringProp name="Argument.name">formula</stringProp>
                <stringProp name="Argument.value">IMC_DCS_SBA_HISTORICAL_FACTORS();</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="mode" elementType="HTTPArgument">
                <stringProp name="Argument.name">mode</stringProp>
                <stringProp name="Argument.value">HTML_REPORT_FETCH</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="report_name" elementType="HTTPArgument">
                <stringProp name="Argument.name">report_name</stringProp>
                <stringProp name="Argument.value">Security Overview</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="report_uuid" elementType="HTTPArgument">
                <stringProp name="Argument.name">report_uuid</stringProp>
                <stringProp name="Argument.value">${=import java.util.UUID; UUID.randomUUID()}</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="request_language" elementType="HTTPArgument">
                <stringProp name="Argument.name">request_language</stringProp>
                <stringProp name="Argument.value">EN-US</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="service_id" elementType="HTTPArgument">
                <stringProp name="Argument.name">service_id</stringProp>
                <stringProp name="Argument.value">generic_component</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ticker" elementType="HTTPArgument">
                <stringProp name="Argument.name">ticker</stringProp>
                <stringProp name="Argument.value">83164K6A</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="validation_mode" elementType="HTTPArgument">
                <stringProp name="Argument.name">validation_mode</stringProp>
                <stringProp name="Argument.value">IGNORE_ID_VALIDATION</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/services/HtmlReportData</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout">0</stringProp>
          <stringProp name="HTTPSampler.response_timeout">0</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Headers" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-Fds-Auth-Token</stringProp>
                <stringProp name="Header.value">${Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Timeout Check" enabled="true">
            <stringProp name="DurationAssertion.duration">0</stringProp>
          </DurationAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Verify Header parameters for 83164C3C" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="0_service" elementType="HTTPArgument">
                <stringProp name="Argument.name">0_service</stringProp>
                <stringProp name="Argument.value">service_id=multi_type_header&amp;curn_iso=LOCAL&amp;request_info=db_names&amp;supported_types%5B%5D=DEALS&amp;supported_types%5B%5D=BONDS_MUNI&amp;supported_types%5B%5D=BONDS&amp;supported_types%5B%5D=PIPE&amp;supported_types%5B%5D=MORTGAGES&amp;supported_types%5B%5D=BANK_LOANS&amp;supported_types%5B%5D=FUTURES&amp;ticker=83164C3C&amp;report_name=Security+Overview&amp;report_uuid=${=import java.util.UUID; UUID.randomUUID()}&amp;request_language=EN-US&amp;validation_mode=IGNORE_ID_VALIDATION&amp;LOG_PERFORMANCE=false</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="mode" elementType="HTTPArgument">
                <stringProp name="Argument.name">mode</stringProp>
                <stringProp name="Argument.value">HTML_REPORT_FETCH</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="multi_fetch" elementType="HTTPArgument">
                <stringProp name="Argument.name">multi_fetch</stringProp>
                <stringProp name="Argument.value">true</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/services/HtmlReportData</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout">0</stringProp>
          <stringProp name="HTTPSampler.response_timeout">0</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Headers" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-Fds-Auth-Token</stringProp>
                <stringProp name="Header.value">${Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Timeout Check" enabled="true">
            <stringProp name="DurationAssertion.duration">0</stringProp>
          </DurationAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Verify Coupon Details parameters for 83164C3C" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="0_service" elementType="HTTPArgument">
                <stringProp name="Argument.name">0_service</stringProp>
                <stringProp name="Argument.value">ticker=83164C3C&amp;report_name=Security+Overview&amp;report_uuid=${=import java.util.UUID; UUID.randomUUID()}&amp;request_language=EN-US&amp;validation_mode=IGNORE_ID_VALIDATION&amp;LOG_PERFORMANCE=false&amp;formula=IMC_DCS_SEC_OV_RPT_FIVE(curn_iso%3D%22LOCAL%22%2Csplit_adjust%3D%220%22)%3B&amp;service_id=generic_component</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="1_service" elementType="HTTPArgument">
                <stringProp name="Argument.name">1_service</stringProp>
                <stringProp name="Argument.value">ticker=83164C3C&amp;report_name=Security+Overview&amp;report_uuid=${=import java.util.UUID; UUID.randomUUID()}&amp;request_language=EN-US&amp;validation_mode=IGNORE_ID_VALIDATION&amp;LOG_PERFORMANCE=false&amp;formula=IMC_DCS_SEC_OV_RPT_ELEVEN(curn_iso%3D%22LOCAL%22%2Csplit_adjust%3D%220%22)%3B&amp;service_id=generic_component</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="mode" elementType="HTTPArgument">
                <stringProp name="Argument.name">mode</stringProp>
                <stringProp name="Argument.value">HTML_REPORT_FETCH</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="multi_fetch" elementType="HTTPArgument">
                <stringProp name="Argument.name">multi_fetch</stringProp>
                <stringProp name="Argument.value">true</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/services/HtmlReportData</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout">0</stringProp>
          <stringProp name="HTTPSampler.response_timeout">0</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Headers" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-Fds-Auth-Token</stringProp>
                <stringProp name="Header.value">${Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Timeout Check" enabled="true">
            <stringProp name="DurationAssertion.duration">0</stringProp>
          </DurationAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Verify Security Information title for 83164C3C" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">mode=HTML_REPORT_FETCH&amp;multi_fetch=true&amp;0_service=ticker%3D83164C3C%26report_name%3DSecurity%2BOverview%26report_uuid%${=import java.util.UUID; UUID.randomUUID()}%26request_language%3DEN-US%26validation_mode%3DIGNORE_ID_VALIDATION%26LOG_PERFORMANCE%3Dfalse%26formula%3DIMC_DCS_SEC_OV_RPT_ONE(is_web%253D0)%253B%26service_id%3Dgeneric_component&amp;1_service=ticker%3D83164C3C%26report_name%3DSecurity%2BOverview%26report_uuid%${=import java.util.UUID; UUID.randomUUID()}%26request_language%3DEN-US%26validation_mode%3DIGNORE_ID_VALIDATION%26LOG_PERFORMANCE%3Dfalse%26formula%3DIMC_DCS_SEC_OV_RPT_TWO(is_web%253D0)%253B%26service_id%3Dgeneric_component&amp;2_service=service_id%3Draw_fql%26ticker%3D83164C3C%26report_name%3DSecurity%2BOverview%26report_uuid%${=import java.util.UUID; UUID.randomUUID()}%26request_language%3DEN-US%26validation_mode%3DIGNORE_ID_VALIDATION%26LOG_PERFORMANCE%3Dfalse%26formula%3DIMC_DCS_SEC_OV_RPT_RATING(inst%253D%2522SP%2522%252Ccomponent%253D%25220%2522)%253B&amp;3_service=service_id%3Draw_fql%26ticker%3D83164C3C%26report_name%3DSecurity%2BOverview%26report_uuid%${=import java.util.UUID; UUID.randomUUID()}%26request_language%3DEN-US%26validation_mode%3DIGNORE_ID_VALIDATION%26LOG_PERFORMANCE%3Dfalse%26formula%3DIMC_DCS_SEC_OV_RPT_RATING(inst%253D%2522MOODYS%2522%252Ccomponent%253D%25220%2522)%253B&amp;4_service=service_id%3Draw_fql%26ticker%3D83164C3C%26report_name%3DSecurity%2BOverview%26report_uuid%${=import java.util.UUID; UUID.randomUUID()}%26request_language%3DEN-US%26validation_mode%3DIGNORE_ID_VALIDATION%26LOG_PERFORMANCE%3Dfalse%26formula%3DIMC_DCS_SEC_OV_RPT_RATING(inst%253D%2522FITCH%2522%252Ccomponent%253D%25220%2522)%253B&amp;5_service=ticker%3D83164C3C%26report_name%3DSecurity%2BOverview%26report_uuid%${=import java.util.UUID; UUID.randomUUID()}%26request_language%3DEN-US%26validation_mode%3DIGNORE_ID_VALIDATION%26LOG_PERFORMANCE%3Dfalse%26formula%3DIMC_DCS_SEC_OV_RPT_FOUR(curn_iso%253D%2522LOCAL%2522%252Csplit_adjust%253D%25220%2522)%253B%26service_id%3Dgeneric_component</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/services/HtmlReportData</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout">0</stringProp>
          <stringProp name="HTTPSampler.response_timeout">0</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Headers" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-Fds-Auth-Token</stringProp>
                <stringProp name="Header.value">${Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Timeout Check" enabled="true">
            <stringProp name="DurationAssertion.duration">0</stringProp>
          </DurationAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Verify Issuer &amp; Sector title for 83164C3C" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">mode=HTML_REPORT_FETCH&amp;multi_fetch=true&amp;0_service=ticker%3D83164C3C%26report_name%3DSecurity%2BOverview%26report_uuid%${=import java.util.UUID; UUID.randomUUID()}%26request_language%3DEN-US%26validation_mode%3DIGNORE_ID_VALIDATION%26LOG_PERFORMANCE%3Dfalse%26formula%3DIMC_DCS_SEC_OV_RPT_ONE(is_web%253D0)%253B%26service_id%3Dgeneric_component&amp;1_service=ticker%3D83164C3C%26report_name%3DSecurity%2BOverview%26report_uuid%${=import java.util.UUID; UUID.randomUUID()}%26request_language%3DEN-US%26validation_mode%3DIGNORE_ID_VALIDATION%26LOG_PERFORMANCE%3Dfalse%26formula%3DIMC_DCS_SEC_OV_RPT_TWO(is_web%253D0)%253B%26service_id%3Dgeneric_component&amp;2_service=service_id%3Draw_fql%26ticker%3D83164C3C%26report_name%3DSecurity%2BOverview%26report_uuid%${=import java.util.UUID; UUID.randomUUID()}%26request_language%3DEN-US%26validation_mode%3DIGNORE_ID_VALIDATION%26LOG_PERFORMANCE%3Dfalse%26formula%3DIMC_DCS_SEC_OV_RPT_RATING(inst%253D%2522SP%2522%252Ccomponent%253D%25220%2522)%253B&amp;3_service=service_id%3Draw_fql%26ticker%3D83164C3C%26report_name%3DSecurity%2BOverview%26report_uuid%${=import java.util.UUID; UUID.randomUUID()}%26request_language%3DEN-US%26validation_mode%3DIGNORE_ID_VALIDATION%26LOG_PERFORMANCE%3Dfalse%26formula%3DIMC_DCS_SEC_OV_RPT_RATING(inst%253D%2522MOODYS%2522%252Ccomponent%253D%25220%2522)%253B&amp;4_service=service_id%3Draw_fql%26ticker%3D83164C3C%26report_name%3DSecurity%2BOverview%26report_uuid%${=import java.util.UUID; UUID.randomUUID()}%26request_language%3DEN-US%26validation_mode%3DIGNORE_ID_VALIDATION%26LOG_PERFORMANCE%3Dfalse%26formula%3DIMC_DCS_SEC_OV_RPT_RATING(inst%253D%2522FITCH%2522%252Ccomponent%253D%25220%2522)%253B&amp;5_service=ticker%3D83164C3C%26report_name%3DSecurity%2BOverview%26report_uuid%${=import java.util.UUID; UUID.randomUUID()}%26request_language%3DEN-US%26validation_mode%3DIGNORE_ID_VALIDATION%26LOG_PERFORMANCE%3Dfalse%26formula%3DIMC_DCS_SEC_OV_RPT_FOUR(curn_iso%253D%2522LOCAL%2522%252Csplit_adjust%253D%25220%2522)%253B%26service_id%3Dgeneric_component</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/services/HtmlReportData</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout">0</stringProp>
          <stringProp name="HTTPSampler.response_timeout">0</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Headers" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-Fds-Auth-Token</stringProp>
                <stringProp name="Header.value">${Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Timeout Check" enabled="true">
            <stringProp name="DurationAssertion.duration">0</stringProp>
          </DurationAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Verify Security Details title for 83164C3C" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">mode=HTML_REPORT_FETCH&amp;multi_fetch=true&amp;0_service=ticker%3D83164C3C%26report_name%3DSecurity%2BOverview%26report_uuid%${=import java.util.UUID; UUID.randomUUID()}%26request_language%3DEN-US%26validation_mode%3DIGNORE_ID_VALIDATION%26LOG_PERFORMANCE%3Dfalse%26formula%3DIMC_DCS_SEC_OV_RPT_ONE(is_web%253D0)%253B%26service_id%3Dgeneric_component&amp;1_service=ticker%3D83164C3C%26report_name%3DSecurity%2BOverview%26report_uuid%${=import java.util.UUID; UUID.randomUUID()}%26request_language%3DEN-US%26validation_mode%3DIGNORE_ID_VALIDATION%26LOG_PERFORMANCE%3Dfalse%26formula%3DIMC_DCS_SEC_OV_RPT_TWO(is_web%253D0)%253B%26service_id%3Dgeneric_component&amp;2_service=service_id%3Draw_fql%26ticker%3D83164C3C%26report_name%3DSecurity%2BOverview%26report_uuid%${=import java.util.UUID; UUID.randomUUID()}%26request_language%3DEN-US%26validation_mode%3DIGNORE_ID_VALIDATION%26LOG_PERFORMANCE%3Dfalse%26formula%3DIMC_DCS_SEC_OV_RPT_RATING(inst%253D%2522SP%2522%252Ccomponent%253D%25220%2522)%253B&amp;3_service=service_id%3Draw_fql%26ticker%3D83164C3C%26report_name%3DSecurity%2BOverview%26report_uuid%${=import java.util.UUID; UUID.randomUUID()}%26request_language%3DEN-US%26validation_mode%3DIGNORE_ID_VALIDATION%26LOG_PERFORMANCE%3Dfalse%26formula%3DIMC_DCS_SEC_OV_RPT_RATING(inst%253D%2522MOODYS%2522%252Ccomponent%253D%25220%2522)%253B&amp;4_service=service_id%3Draw_fql%26ticker%3D83164C3C%26report_name%3DSecurity%2BOverview%26report_uuid%${=import java.util.UUID; UUID.randomUUID()}%26request_language%3DEN-US%26validation_mode%3DIGNORE_ID_VALIDATION%26LOG_PERFORMANCE%3Dfalse%26formula%3DIMC_DCS_SEC_OV_RPT_RATING(inst%253D%2522FITCH%2522%252Ccomponent%253D%25220%2522)%253B&amp;5_service=ticker%3D83164C3C%26report_name%3DSecurity%2BOverview%26report_uuid%${=import java.util.UUID; UUID.randomUUID()}%26request_language%3DEN-US%26validation_mode%3DIGNORE_ID_VALIDATION%26LOG_PERFORMANCE%3Dfalse%26formula%3DIMC_DCS_SEC_OV_RPT_FOUR(curn_iso%253D%2522LOCAL%2522%252Csplit_adjust%253D%25220%2522)%253B%26service_id%3Dgeneric_component</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/services/HtmlReportData</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout">0</stringProp>
          <stringProp name="HTTPSampler.response_timeout">0</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Headers" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-Fds-Auth-Token</stringProp>
                <stringProp name="Header.value">${Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Timeout Check" enabled="true">
            <stringProp name="DurationAssertion.duration">0</stringProp>
          </DurationAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Verify Issue Size title for 83164C3C" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="0_service" elementType="HTTPArgument">
                <stringProp name="Argument.name">0_service</stringProp>
                <stringProp name="Argument.value">ticker=83164C3C&amp;report_name=Security+Overview&amp;report_uuid=${=import java.util.UUID; UUID.randomUUID()}&amp;request_language=EN-US&amp;validation_mode=IGNORE_ID_VALIDATION&amp;LOG_PERFORMANCE=false&amp;formula=IMC_DCS_SEC_OV_RPT_SIX(curn_iso%3D%22LOCAL%22%2Csplit_adjust%3D%220%22)%3B&amp;service_id=generic_component</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="1_service" elementType="HTTPArgument">
                <stringProp name="Argument.name">1_service</stringProp>
                <stringProp name="Argument.value">ticker=83164C3C&amp;report_name=Security+Overview&amp;report_uuid=${=import java.util.UUID; UUID.randomUUID()}&amp;request_language=EN-US&amp;validation_mode=IGNORE_ID_VALIDATION&amp;LOG_PERFORMANCE=false&amp;formula=IMC_DCS_SEC_OV_RPT_NINE(curn_iso%3D%22LOCAL%22%2Csplit_adjust%3D%220%22)%3B&amp;service_id=generic_component</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="2_service" elementType="HTTPArgument">
                <stringProp name="Argument.name">2_service</stringProp>
                <stringProp name="Argument.value">ticker=83164C3C&amp;report_name=Security+Overview&amp;report_uuid=${=import java.util.UUID; UUID.randomUUID()}&amp;request_language=EN-US&amp;validation_mode=IGNORE_ID_VALIDATION&amp;LOG_PERFORMANCE=false&amp;formula=IMC_DCS_SEC_OV_RPT_TEN(curn_iso%3D%22LOCAL%22%2Csplit_adjust%3D%220%22)%3B&amp;service_id=generic_component</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="mode" elementType="HTTPArgument">
                <stringProp name="Argument.name">mode</stringProp>
                <stringProp name="Argument.value">HTML_REPORT_FETCH</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="multi_fetch" elementType="HTTPArgument">
                <stringProp name="Argument.name">multi_fetch</stringProp>
                <stringProp name="Argument.value">true</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/services/HtmlReportData</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout">0</stringProp>
          <stringProp name="HTTPSampler.response_timeout">0</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Headers" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-Fds-Auth-Token</stringProp>
                <stringProp name="Header.value">${Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Timeout Check" enabled="true">
            <stringProp name="DurationAssertion.duration">0</stringProp>
          </DurationAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Verify Collateral Information title for 83164C3C" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="0_service" elementType="HTTPArgument">
                <stringProp name="Argument.name">0_service</stringProp>
                <stringProp name="Argument.value">ticker=83164C3C&amp;report_name=Security+Overview&amp;report_uuid=${=import java.util.UUID; UUID.randomUUID()}&amp;request_language=EN-US&amp;validation_mode=IGNORE_ID_VALIDATION&amp;LOG_PERFORMANCE=false&amp;formula=IMC_DCS_SEC_OV_RPT_EIGHT(curn_iso%3D%22LOCAL%22%2Csplit_adjust%3D%220%22)%3B&amp;service_id=generic_component</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="1_service" elementType="HTTPArgument">
                <stringProp name="Argument.name">1_service</stringProp>
                <stringProp name="Argument.value">ticker=83164C3C&amp;report_name=Security+Overview&amp;report_uuid=${=import java.util.UUID; UUID.randomUUID()}&amp;request_language=EN-US&amp;validation_mode=IGNORE_ID_VALIDATION&amp;LOG_PERFORMANCE=false&amp;formula=IMC_DCS_SEC_OV_RPT_QUICK_LINKS()%3B&amp;service_id=generic_component</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="mode" elementType="HTTPArgument">
                <stringProp name="Argument.name">mode</stringProp>
                <stringProp name="Argument.value">HTML_REPORT_FETCH</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="multi_fetch" elementType="HTTPArgument">
                <stringProp name="Argument.name">multi_fetch</stringProp>
                <stringProp name="Argument.value">true</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/services/HtmlReportData</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout">0</stringProp>
          <stringProp name="HTTPSampler.response_timeout">0</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Headers" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-Fds-Auth-Token</stringProp>
                <stringProp name="Header.value">${Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Timeout Check" enabled="true">
            <stringProp name="DurationAssertion.duration">0</stringProp>
          </DurationAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Verify Header paramaters for 83165AC8" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="0_service" elementType="HTTPArgument">
                <stringProp name="Argument.name">0_service</stringProp>
                <stringProp name="Argument.value">service_id=multi_type_header&amp;curn_iso=LOCAL&amp;request_info=db_names&amp;supported_types%5B%5D=DEALS&amp;supported_types%5B%5D=BONDS_MUNI&amp;supported_types%5B%5D=BONDS&amp;supported_types%5B%5D=PIPE&amp;supported_types%5B%5D=MORTGAGES&amp;supported_types%5B%5D=BANK_LOANS&amp;supported_types%5B%5D=FUTURES&amp;ticker=83165AC8&amp;report_name=Security+Overview&amp;report_uuid=6c1eb5af-5128-42b4-8bdf-4ecd80d81d37&amp;request_language=EN-US&amp;validation_mode=IGNORE_ID_VALIDATION&amp;LOG_PERFORMANCE=false</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="mode" elementType="HTTPArgument">
                <stringProp name="Argument.name">mode</stringProp>
                <stringProp name="Argument.value">HTML_REPORT_FETCH</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="multi_fetch" elementType="HTTPArgument">
                <stringProp name="Argument.name">multi_fetch</stringProp>
                <stringProp name="Argument.value">true</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/services/HtmlReportData</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout">0</stringProp>
          <stringProp name="HTTPSampler.response_timeout">0</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Headers" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-Fds-Auth-Token</stringProp>
                <stringProp name="Header.value">${Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Timeout Check" enabled="true">
            <stringProp name="DurationAssertion.duration">0</stringProp>
          </DurationAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Verify Coupon Details parameters for 83165AC8" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="0_service" elementType="HTTPArgument">
                <stringProp name="Argument.name">0_service</stringProp>
                <stringProp name="Argument.value">ticker=83165AC8&amp;report_name=Security+Overview&amp;report_uuid=${=import java.util.UUID; UUID.randomUUID()}&amp;request_language=EN-US&amp;validation_mode=IGNORE_ID_VALIDATION&amp;LOG_PERFORMANCE=false&amp;formula=IMC_DCS_SEC_OV_RPT_FIVE(curn_iso%3D%22LOCAL%22%2Csplit_adjust%3D%220%22)%3B&amp;service_id=generic_component</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="1_service" elementType="HTTPArgument">
                <stringProp name="Argument.name">1_service</stringProp>
                <stringProp name="Argument.value">ticker=83165AC8&amp;report_name=Security+Overview&amp;report_uuid=${=import java.util.UUID; UUID.randomUUID()}&amp;request_language=EN-US&amp;validation_mode=IGNORE_ID_VALIDATION&amp;LOG_PERFORMANCE=false&amp;formula=IMC_DCS_SEC_OV_RPT_ELEVEN(curn_iso%3D%22LOCAL%22%2Csplit_adjust%3D%220%22)%3B&amp;service_id=generic_component</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="mode" elementType="HTTPArgument">
                <stringProp name="Argument.name">mode</stringProp>
                <stringProp name="Argument.value">HTML_REPORT_FETCH</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="multi_fetch" elementType="HTTPArgument">
                <stringProp name="Argument.name">multi_fetch</stringProp>
                <stringProp name="Argument.value">true</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/services/HtmlReportData</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout">0</stringProp>
          <stringProp name="HTTPSampler.response_timeout">0</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Headers" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-Fds-Auth-Token</stringProp>
                <stringProp name="Header.value">${Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Timeout Check" enabled="true">
            <stringProp name="DurationAssertion.duration">0</stringProp>
          </DurationAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Verify Security Information title for 83165AC8" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">mode=HTML_REPORT_FETCH&amp;multi_fetch=true&amp;0_service=ticker%3D83164C3C%26report_name%3DSecurity%2BOverview%26report_uuid%${=import java.util.UUID; UUID.randomUUID()}%26request_language%3DEN-US%26validation_mode%3DIGNORE_ID_VALIDATION%26LOG_PERFORMANCE%3Dfalse%26formula%3DIMC_DCS_SEC_OV_RPT_ONE(is_web%253D0)%253B%26service_id%3Dgeneric_component&amp;1_service=ticker%3D83164C3C%26report_name%3DSecurity%2BOverview%26report_uuid%${=import java.util.UUID; UUID.randomUUID()}%26request_language%3DEN-US%26validation_mode%3DIGNORE_ID_VALIDATION%26LOG_PERFORMANCE%3Dfalse%26formula%3DIMC_DCS_SEC_OV_RPT_TWO(is_web%253D0)%253B%26service_id%3Dgeneric_component&amp;2_service=service_id%3Draw_fql%26ticker%3D83164C3C%26report_name%3DSecurity%2BOverview%26report_uuid%${=import java.util.UUID; UUID.randomUUID()}%26request_language%3DEN-US%26validation_mode%3DIGNORE_ID_VALIDATION%26LOG_PERFORMANCE%3Dfalse%26formula%3DIMC_DCS_SEC_OV_RPT_RATING(inst%253D%2522SP%2522%252Ccomponent%253D%25220%2522)%253B&amp;3_service=service_id%3Draw_fql%26ticker%3D83164C3C%26report_name%3DSecurity%2BOverview%26report_uuid%${=import java.util.UUID; UUID.randomUUID()}%26request_language%3DEN-US%26validation_mode%3DIGNORE_ID_VALIDATION%26LOG_PERFORMANCE%3Dfalse%26formula%3DIMC_DCS_SEC_OV_RPT_RATING(inst%253D%2522MOODYS%2522%252Ccomponent%253D%25220%2522)%253B&amp;4_service=service_id%3Draw_fql%26ticker%3D83164C3C%26report_name%3DSecurity%2BOverview%26report_uuid%${=import java.util.UUID; UUID.randomUUID()}%26request_language%3DEN-US%26validation_mode%3DIGNORE_ID_VALIDATION%26LOG_PERFORMANCE%3Dfalse%26formula%3DIMC_DCS_SEC_OV_RPT_RATING(inst%253D%2522FITCH%2522%252Ccomponent%253D%25220%2522)%253B&amp;5_service=ticker%3D83164C3C%26report_name%3DSecurity%2BOverview%26report_uuid%${=import java.util.UUID; UUID.randomUUID()}%26request_language%3DEN-US%26validation_mode%3DIGNORE_ID_VALIDATION%26LOG_PERFORMANCE%3Dfalse%26formula%3DIMC_DCS_SEC_OV_RPT_FOUR(curn_iso%253D%2522LOCAL%2522%252Csplit_adjust%253D%25220%2522)%253B%26service_id%3Dgeneric_component</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/services/HtmlReportData</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout">0</stringProp>
          <stringProp name="HTTPSampler.response_timeout">0</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Headers" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-Fds-Auth-Token</stringProp>
                <stringProp name="Header.value">${Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Timeout Check" enabled="true">
            <stringProp name="DurationAssertion.duration">0</stringProp>
          </DurationAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Verify Issuer &amp; Sector title for 83165AC8" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">mode=HTML_REPORT_FETCH&amp;multi_fetch=true&amp;0_service=ticker%3D83164C3C%26report_name%3DSecurity%2BOverview%26report_uuid%${=import java.util.UUID; UUID.randomUUID()}%26request_language%3DEN-US%26validation_mode%3DIGNORE_ID_VALIDATION%26LOG_PERFORMANCE%3Dfalse%26formula%3DIMC_DCS_SEC_OV_RPT_ONE(is_web%253D0)%253B%26service_id%3Dgeneric_component&amp;1_service=ticker%3D83164C3C%26report_name%3DSecurity%2BOverview%26report_uuid%${=import java.util.UUID; UUID.randomUUID()}%26request_language%3DEN-US%26validation_mode%3DIGNORE_ID_VALIDATION%26LOG_PERFORMANCE%3Dfalse%26formula%3DIMC_DCS_SEC_OV_RPT_TWO(is_web%253D0)%253B%26service_id%3Dgeneric_component&amp;2_service=service_id%3Draw_fql%26ticker%3D83164C3C%26report_name%3DSecurity%2BOverview%26report_uuid%${=import java.util.UUID; UUID.randomUUID()}%26request_language%3DEN-US%26validation_mode%3DIGNORE_ID_VALIDATION%26LOG_PERFORMANCE%3Dfalse%26formula%3DIMC_DCS_SEC_OV_RPT_RATING(inst%253D%2522SP%2522%252Ccomponent%253D%25220%2522)%253B&amp;3_service=service_id%3Draw_fql%26ticker%3D83164C3C%26report_name%3DSecurity%2BOverview%26report_uuid%${=import java.util.UUID; UUID.randomUUID()}%26request_language%3DEN-US%26validation_mode%3DIGNORE_ID_VALIDATION%26LOG_PERFORMANCE%3Dfalse%26formula%3DIMC_DCS_SEC_OV_RPT_RATING(inst%253D%2522MOODYS%2522%252Ccomponent%253D%25220%2522)%253B&amp;4_service=service_id%3Draw_fql%26ticker%3D83164C3C%26report_name%3DSecurity%2BOverview%26report_uuid%${=import java.util.UUID; UUID.randomUUID()}%26request_language%3DEN-US%26validation_mode%3DIGNORE_ID_VALIDATION%26LOG_PERFORMANCE%3Dfalse%26formula%3DIMC_DCS_SEC_OV_RPT_RATING(inst%253D%2522FITCH%2522%252Ccomponent%253D%25220%2522)%253B&amp;5_service=ticker%3D83164C3C%26report_name%3DSecurity%2BOverview%26report_uuid%${=import java.util.UUID; UUID.randomUUID()}%26request_language%3DEN-US%26validation_mode%3DIGNORE_ID_VALIDATION%26LOG_PERFORMANCE%3Dfalse%26formula%3DIMC_DCS_SEC_OV_RPT_FOUR(curn_iso%253D%2522LOCAL%2522%252Csplit_adjust%253D%25220%2522)%253B%26service_id%3Dgeneric_component</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/services/HtmlReportData</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout">0</stringProp>
          <stringProp name="HTTPSampler.response_timeout">0</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Headers" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-Fds-Auth-Token</stringProp>
                <stringProp name="Header.value">${Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Timeout Check" enabled="true">
            <stringProp name="DurationAssertion.duration">0</stringProp>
          </DurationAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Verify Security Details title for 83165AC8" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">mode=HTML_REPORT_FETCH&amp;multi_fetch=true&amp;0_service=ticker%3D83164C3C%26report_name%3DSecurity%2BOverview%26report_uuid%${=import java.util.UUID; UUID.randomUUID()}%26request_language%3DEN-US%26validation_mode%3DIGNORE_ID_VALIDATION%26LOG_PERFORMANCE%3Dfalse%26formula%3DIMC_DCS_SEC_OV_RPT_ONE(is_web%253D0)%253B%26service_id%3Dgeneric_component&amp;1_service=ticker%3D83164C3C%26report_name%3DSecurity%2BOverview%26report_uuid%${=import java.util.UUID; UUID.randomUUID()}%26request_language%3DEN-US%26validation_mode%3DIGNORE_ID_VALIDATION%26LOG_PERFORMANCE%3Dfalse%26formula%3DIMC_DCS_SEC_OV_RPT_TWO(is_web%253D0)%253B%26service_id%3Dgeneric_component&amp;2_service=service_id%3Draw_fql%26ticker%3D83164C3C%26report_name%3DSecurity%2BOverview%26report_uuid%${=import java.util.UUID; UUID.randomUUID()}%26request_language%3DEN-US%26validation_mode%3DIGNORE_ID_VALIDATION%26LOG_PERFORMANCE%3Dfalse%26formula%3DIMC_DCS_SEC_OV_RPT_RATING(inst%253D%2522SP%2522%252Ccomponent%253D%25220%2522)%253B&amp;3_service=service_id%3Draw_fql%26ticker%3D83164C3C%26report_name%3DSecurity%2BOverview%26report_uuid%${=import java.util.UUID; UUID.randomUUID()}%26request_language%3DEN-US%26validation_mode%3DIGNORE_ID_VALIDATION%26LOG_PERFORMANCE%3Dfalse%26formula%3DIMC_DCS_SEC_OV_RPT_RATING(inst%253D%2522MOODYS%2522%252Ccomponent%253D%25220%2522)%253B&amp;4_service=service_id%3Draw_fql%26ticker%3D83164C3C%26report_name%3DSecurity%2BOverview%26report_uuid%${=import java.util.UUID; UUID.randomUUID()}%26request_language%3DEN-US%26validation_mode%3DIGNORE_ID_VALIDATION%26LOG_PERFORMANCE%3Dfalse%26formula%3DIMC_DCS_SEC_OV_RPT_RATING(inst%253D%2522FITCH%2522%252Ccomponent%253D%25220%2522)%253B&amp;5_service=ticker%3D83164C3C%26report_name%3DSecurity%2BOverview%26report_uuid%${=import java.util.UUID; UUID.randomUUID()}%26request_language%3DEN-US%26validation_mode%3DIGNORE_ID_VALIDATION%26LOG_PERFORMANCE%3Dfalse%26formula%3DIMC_DCS_SEC_OV_RPT_FOUR(curn_iso%253D%2522LOCAL%2522%252Csplit_adjust%253D%25220%2522)%253B%26service_id%3Dgeneric_component</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/services/HtmlReportData</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout">0</stringProp>
          <stringProp name="HTTPSampler.response_timeout">0</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Headers" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-Fds-Auth-Token</stringProp>
                <stringProp name="Header.value">${Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Timeout Check" enabled="true">
            <stringProp name="DurationAssertion.duration">0</stringProp>
          </DurationAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Verify Issue Size title for 83165AC8" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="0_service" elementType="HTTPArgument">
                <stringProp name="Argument.name">0_service</stringProp>
                <stringProp name="Argument.value">ticker=83165AC8&amp;report_name=Security+Overview&amp;report_uuid=${=import java.util.UUID; UUID.randomUUID()}&amp;request_language=EN-US&amp;validation_mode=IGNORE_ID_VALIDATION&amp;LOG_PERFORMANCE=false&amp;formula=IMC_DCS_SEC_OV_RPT_SIX(curn_iso%3D%22LOCAL%22%2Csplit_adjust%3D%220%22)%3B&amp;service_id=generic_component</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="1_service" elementType="HTTPArgument">
                <stringProp name="Argument.name">1_service</stringProp>
                <stringProp name="Argument.value">ticker=83165AC8&amp;report_name=Security+Overview&amp;report_uuid=${=import java.util.UUID; UUID.randomUUID()}&amp;request_language=EN-US&amp;validation_mode=IGNORE_ID_VALIDATION&amp;LOG_PERFORMANCE=false&amp;formula=IMC_DCS_SEC_OV_RPT_NINE(curn_iso%3D%22LOCAL%22%2Csplit_adjust%3D%220%22)%3B&amp;service_id=generic_component</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="2_service" elementType="HTTPArgument">
                <stringProp name="Argument.name">2_service</stringProp>
                <stringProp name="Argument.value">ticker=83165AC8&amp;report_name=Security+Overview&amp;report_uuid=${=import java.util.UUID; UUID.randomUUID()}&amp;request_language=EN-US&amp;validation_mode=IGNORE_ID_VALIDATION&amp;LOG_PERFORMANCE=false&amp;formula=IMC_DCS_SEC_OV_RPT_TEN(curn_iso%3D%22LOCAL%22%2Csplit_adjust%3D%220%22)%3B&amp;service_id=generic_component</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="mode" elementType="HTTPArgument">
                <stringProp name="Argument.name">mode</stringProp>
                <stringProp name="Argument.value">HTML_REPORT_FETCH</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="multi_fetch" elementType="HTTPArgument">
                <stringProp name="Argument.name">multi_fetch</stringProp>
                <stringProp name="Argument.value">true</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/services/HtmlReportData</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout">0</stringProp>
          <stringProp name="HTTPSampler.response_timeout">0</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Headers" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-Fds-Auth-Token</stringProp>
                <stringProp name="Header.value">${Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Timeout Check" enabled="true">
            <stringProp name="DurationAssertion.duration">0</stringProp>
          </DurationAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Verify Collateral Information title for 83165AC8" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="0_service" elementType="HTTPArgument">
                <stringProp name="Argument.name">0_service</stringProp>
                <stringProp name="Argument.value">ticker=83165AC8&amp;report_name=Security+Overview&amp;report_uuid=${=import java.util.UUID; UUID.randomUUID()}&amp;request_language=EN-US&amp;validation_mode=IGNORE_ID_VALIDATION&amp;LOG_PERFORMANCE=false&amp;formula=IMC_DCS_SEC_OV_RPT_EIGHT(curn_iso%3D%22LOCAL%22%2Csplit_adjust%3D%220%22)%3B&amp;service_id=generic_component</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="1_service" elementType="HTTPArgument">
                <stringProp name="Argument.name">1_service</stringProp>
                <stringProp name="Argument.value">ticker=83165AC8&amp;report_name=Security+Overview&amp;report_uuid=${=import java.util.UUID; UUID.randomUUID()}&amp;request_language=EN-US&amp;validation_mode=IGNORE_ID_VALIDATION&amp;LOG_PERFORMANCE=false&amp;formula=IMC_DCS_SEC_OV_RPT_QUICK_LINKS()%3B&amp;service_id=generic_component</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="mode" elementType="HTTPArgument">
                <stringProp name="Argument.name">mode</stringProp>
                <stringProp name="Argument.value">HTML_REPORT_FETCH</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="multi_fetch" elementType="HTTPArgument">
                <stringProp name="Argument.name">multi_fetch</stringProp>
                <stringProp name="Argument.value">true</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/services/HtmlReportData</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout">0</stringProp>
          <stringProp name="HTTPSampler.response_timeout">0</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Headers" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-Fds-Auth-Token</stringProp>
                <stringProp name="Header.value">${Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Timeout Check" enabled="true">
            <stringProp name="DurationAssertion.duration">0</stringProp>
          </DurationAssertion>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>true</responseData>
              <samplerData>false</samplerData>
              <xml>true</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
